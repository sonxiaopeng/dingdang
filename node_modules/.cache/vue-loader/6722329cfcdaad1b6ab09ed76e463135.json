{"remainingRequest":"C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\web\\Desktop\\Dr.Dingdang\\src\\views\\Jkbk.vue?vue&type=template&id=6c45cb84&scoped=true&","dependencies":[{"path":"C:\\Users\\web\\Desktop\\Dr.Dingdang\\src\\views\\Jkbk.vue","mtime":1611384409863},{"path":"C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610353156000},{"path":"C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1610353180000},{"path":"C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610353156000},{"path":"C:\\Users\\web\\Desktop\\Dr.Dingdang\\node_modules\\vue-loader\\lib\\index.js","mtime":1610353180000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}